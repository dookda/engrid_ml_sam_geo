version: '3'
services:

  nginx:
    image: nginx:latest
    container_name: rtk_nginx
    restart: unless-stopped
    depends_on:
      - nodejs
      - gdal
      # - tomcat
    ports:
      # - 443:443
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/:/etc/nginx/

  postgis:
    image: postgis/postgis
    container_name: rtk_postgis
    restart: always
    environment:
      - TZ=Asia/Bangkok
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      # - POSTGRES_DB=gnss
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432

  # tomcat:
  #   image: tomcat:8-jre11
  #   container_name: rtk_tomcat
  #   depends_on:
  #     - postgis
  #   volumes:
  #     - ./tomcat/:/usr/local/tomcat/webapps/
  #     - ./tomcat/fonts/truetype/:/usr/share/fonts/truetype/
  #   ports:
  #     - 8080:8080

  nodejs:
    image: node:latest
    container_name: rtk_nodejs
    working_dir: /app/nodejs
    restart: always
    depends_on:
      - postgis
    environment:
      - NODE_ENV=production
      - TZ=Asia/Bangkok
    volumes:
      - ./nodejs:/app/nodejs
      - ./gdal:/app/nodejs/www/_gdal
    ports:
      - 3000:3000
    command: bash -c "npm i && npm i -g nodemon && nodemon server.js"

  gdal:
    image: sakdahomhuan/gdalpython:latest
    container_name: rtk_gdal
    working_dir: /mnt/
    volumes:
      - ./gdal/:/mnt/
    ports:
      - 3500:3500
    command: bash -c "apt update && cd /mnt/ && python app.py"

  ubuntu:
    container_name: rtk_ubuntu
    restart: always
    build:
      context: ./ubuntu
      dockerfile: Dockerfile
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - ./ubuntu/:/mnt/
      - ./nodejs/DATA/:/mnt/DATA/
